1.Что такое Spring? Какие основные задачи выполняет этот фреймворк?

	Основной особенностью фреймворка является использование паттерна программирования - Инверсия контроля и внедрение зависимостей.
	
 
2. Что такое IoC и DI? В чем отличие этих терминов?

	IoC - инверсия контроля, нижестоящие в иерархии классы ничего не знают о вышестоящих и о их реализации, основана на DI
	DI - внедрение зависимостей, спринг создает необходимые экземпляры классов (бины) заранее и подставляет их туда где они используются в коде
	
 
3. Перечислите основные модули Spring фреймворка.

	Spring Core
	Spring Data
	Spring Web MVC
	Spring Security
	Spring AOP
  	
 
4. Перечислите способы инъекций зависимостей.
 
 	Constructor Injection
 	Method Injection
 	Field Injection
 	
 
5. Что такое ApplicationContext? Когда он создается?

	Центральный класс (в частности интерфейс) занимающийся настройкой всего остального окружения
	
	Является контейнером для реализации инверсии контроля.
	
	Создается в самом начале.

 
6. Расскажите, что такое Spring Bean? Опишите жизненный цикл Spring Bean?

	Управляемые контекстом классы, описанные в конфигурации приложения
	
	Жизненный цикл:
		1. Создается спринг контейнер (AplicationContext), он читает конфигурацию и создает на ее основе bean-definitions.
		2. Срабатывает обработка классами BeanFactoryPostProcessor
		3. Создаются bean-ы и производится внедрение зависимостей (Dependency Injection) => (BeanNameAware, BeanFactoryAware, ApplicationContextAware)
		4. Срабатывает обработка классами BeanPostProcessor (до и после инициализации)
		5. Срабатывают методы инициализации:
			@PostConstruct
			InitializingBean.afterPropertiesSet()
		6. Приложение сконфигурировано и запущено 
		7. Инициализируется закрытие приложения и спринг контейнер закрывается
		8. Срабатывают методы закрытия singleton-bean:
			@PreDestroy
			DesposableBean.destroy()

 
7. Объясните для чего используются аннотации @Autowired @Qualifier. Когда, какой нужно использовать?
 
 	@Autowired - когда нужно чтобы спринг знал что нужно заинжектить какую то зависимость
 	@Qualifier - когда нужно указать ID бина который нужно заинжектить
 
 
8. Что такое FactoryBeans?
 
 	FactoryBeans - интерфейс занимающийся реализацией IoC и DI. Он имплементируется интерфейсом ApplicationContext.
 	Он по сути и является контейнером для бинов.
 
 
9. Что такое Profiles? Когда их используют.
 
 	Профили для старта приложения с разными настройками: свойства и конфигурация
 	@Profile(имя профиля) над классом
 	application-<имя профиля>.properties - свойства профиля
 
 
10. Расскажите про модуль Spring AOP.

	Этот модуль позволяет писать классы которые смогут перехватывать какие то определенные события в жизни других классов 
	и выполнять какую то дополнительную работу (логирование, фильтрация, транзакции, обработка исключений)

 
11. Объясните шаблон проектирование Proxy? Где он используется в Spring.

	Проксирование широко используется модулем Spring AOP для обработки определенных в классе @Aspect событий @Pointcut
	
	Прокси используется при инициализации и определении конфигурационных классов

 	В Spring Security
 
 
12. Объясните, как происходит интеграция с JDBC.
 
 	В спринге есть специальный класс упрощающий работу с JDBC - JdbcTemplate, с его помощью гораздо проще писать интеграцию с JDBC 
 	нежели используя нативную поддержку JDBC.
 
 
13. Объясните, как происходит интеграция с Hibernate.

	Hibernate выступает в роли нативной поддержки спецификации JPA. Используя EntityManager можно получить доступ к SessionFactory и
	описывать работу с данными нативными по отношению к Hibernate методами.
	
 
14. Что такое Transaction Manager? Где он используется? Когда он нужен?
 
 	Для того чтобы работать с транзакциями спринг предоставляет интерфейс TransactionManager и PlatformTransactionManager
 	@EnableTransactionManagement
 	@Bean который возвращает TransactionManager - имплементацию предлагаемую используемым вендором бд или орм
 
 	для поддержки использования транзакций и анотации @Transactional
 
 
15. Расскажите о модуле Spring MVC.
 
 	Этот модуль позволяет создавать классы хранилища, сервиса и контроллеров. Настраивает механизмы сервлетов и передает запросы которые на них
 	поступают контроллерам, которые в свою очередь обрабатывают создание ответа на запрос.
 
 
16. Объясните верхнеуровневую архитектуру Spring MVC: Dispatcher, ViewResolver.

	DispatcherServlet принимает все HttpServletRequest и хэндлит их на соответствующие эндпоинты созданные в контроллерах. Обычный контроллер обрабатывает запрос, 
	настраивает контекст запроса и возвращает имя шаблона по которому диспатчер формирует ответ на запрос в виде html. Рест контроллер возвращает данные, 
	которые парсятся в json и диспатчер возвращает ответ в таком виде

 
17. Как конфигурировать Spring MVC?
 
 	Нужно настроить DispatcherServlet расширив интерфейс WebApplicationInitializer
 	
 	и бин ViewResolver для того чтобы спринг мог находить макеты шаблонов.
 
 	Либо расширить класс AbstractAnnotationConfigDispatcherServletInitializer и определить классы конфигурации и маппинг DispatcherServlet.
 
 
18. Что такое Spring scope? Какие типы Spring scope существуют?
 
 	Spring scope - определяет контекст уникальности создания бинов
 	
 	singleton, prototype, request, session, application, websocket
 
 
19. Расскажите про аннотации @RequestMapping, @PathVariable, @RequestBody, @RequestParam, @ModelAttribute, @ResponseBody, @SessionAttribute, @CookieValue.
 
 	Все эти аннотации используются в классах контроллеров для маппинга запросов и данных запросов на методы контроллеров и их аргументы.
 
 
20. Расскажите про модуль Spring Security?
 
 	Этот модуль работает с использованием фильтров из фреймворка сервлетов и позволяет быстро настроить аутентификацию и авторизацию для приложения.
 
 
21. Как конфигурировать Spring Security?
 
 	Нужно расширить WebSecurityConfigurerAdapter и переопределить как минимум configure(AuthentificationManagerBuilder auth) и configure(HttpSecurity http) 
 	для настройки авторизации.
 	
 	Если это не спринг-бут тогда нужно еще расширить класс AbstractSecurityWebApplicationInitializer без методов, чтобы спринг запустил спринг секурити.
 
 
22. Что такое UserDetails?

	Используя UserDetailsService можно сделать класс который будет доставать откуда либо информацию о пользователях и передать этот класс AuthenticationManagerBuilder-у

 
23. Расскажите верхнеуровневую архитектуру Spring Security.
 
	1. В сервлет контейнере регистрируется DelegatingFilterProxy, имплементация фильтра сервлет контейнера
	2. Он делегирует дальнейшие действия спринг бину FilterChainProxy, центральный класс во фреймворке для работы с сервлетами (SecurityContext, HttpFirewall)
	3. Тот в свою очередь делегирует задачу по поиску списка SecurityFilter классу SecurityFilterChain для заданного урл
	4. Для урл запроса срабатывает список специально выбранных фильтров

 
24. Что такое FilterChainProxy?
 
 	Центральный класс Spring Security для работы в среде сервлетов, помимо подбора списка фильтров для заданного урл обеспечивает
 	очистку ServletContext и обеспечивает работу HttpFirewall, защита от списка известных вариантов атак и угроз.
 
 
25. Расскажите о схеме работы пользователь-роль.
 
 	У пользователя может быть одна или несколько ролей, доступ к тем или иным эндпоинтам разрешен некоторым ролям.
 	На основании списка своих ролей пользователь может или не может получить доступ к ресурсу.
 
 
26. Расскажите о SpringContextHolder.
 
 	???
 
 
27. Расскажите об аспектах многопоточного окружения в Spring.
 
 	В спринг есть своя имплементация интерфейса Executor, это TaskExecutor, многопоточный код в спринг реализован с использованием своих реализаций этого интерфейса
 
 	???
 
 
28. Расскажите о тестирование Spring приложений?
 
	ReflectionTestUtils - to set private or protected fields, to deal with @Autowired, @PostConstruct, @PreDestroy annotations
	AopTestUtils - for handling proxy


29. Расскажите о тестирование Spring MVС приложений.
 
	ModelAndViewAssert + MockHttpServletRequest + MockHttpSession from Servlet API mocks
			, Spring MVC Test Framework (MockMvc)
 
 
30. Расскажите о мониторинге Spring приложений.

	Spring Actuator - позволяет включить и настроить служебные эндпоинты для мониторинга состояния приложения

	Java VisualVM
	
