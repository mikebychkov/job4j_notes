1. Расскажите общее идею что такое поток ввода-вывода?

Почти все программы имеют дело с обработкой пользовательской информации.
Для работы с различными устройствами ввода и вывода информации реализована схожая методология работы в виде "потоков" для того чтобы не фокусироваться
на реализации похожих средств для разных устройств при написании кода


2. Что такое Java IO?

Пакет содержащий базовые средства для работы с байтовым вводом и выводом 
и работы с файловой системой.


3. Что такое Java NIO?

Пакет содержащий базовые средства для работы с символьным вводом и выводом
и работы с файловой системой.


4. Что такое Scanner? 

Класс позволяющий удобно работать с потоками ввода.


5. Как работает Scanner внутри?

Инициализируется потоком, файлом или строкой. Создает буферизированный поток и использует разделитель для разбиения информации на лексемы.


6. Какие базовые методы существуют в Scanner?

hasNextX()
nextX()


7. Что такое байтовый поток? Как он реализован внутри?

Абстрактные классы InputStream, OutputStream


8. Что такое символьный поток? Как он реализован внутри?

Абстрактные классы Reader, Writer


9. Что такое буферизированный поток? 

Поток который использует буфер для оптимизации операций ввода вывода.


10. Что такое форматированный вывод? Какие механизмы позволяют осуществить форматированный вызов?

Вывод данных без конкатенации со строкой а через специальные методы поддерживающие форматирование и указание и заполнение параметров.


11. Как осуществлятся ввод и вывод из командной строки?

System.in подклас InputStream, поэтому оборачивается в буферизированный поток или Scaner и используется.


12. Что такое класс Console? Расскажите его АПИ.

Класс позволяющий удобно работать с консольным вводом и выводом.
System.console() 
readLine()
readPassword()
format()
printf()
reader()
writer()


13. Что такое поток данных? Data stream.

Классы потоков DataStream на основе FileStream предназначен для записи и чтения примитивных типов данных и имеет соотв. методы:
readX()
writeX()
(Int, Double, Boolean)


14. Что такое поток объектов, Object stream.

Байтовый поток способный сохранять и читать состояние сериализуемых объектов.
Содержит похожие методы как в DataStream, а также
readObject()
writeObject()


15. Что такое Path? Как он реализуется на разных ОС?

Интерфейс из пакета nio, инкапсулирует путь к файлу или каталогу.


16. Как получить список файлов?

io:
  File.list() или File.listFiles()
nio:  
  Files.list()
  Files.walk()
  Files.walkFileTree()


17. Как проверить что файловая сущность является файлом или папкой?

io:
  File.isDirectory() 
nio:
  Files.isDirectory() 


18. Как удалить файл?

io:
  File.delete()
nio:  
  Files.delete()


19. Как переместить файл?

io:
  File.renameTo()
nio:
  Files.move()


20. Как управлять аттрибьтами файла?

io:
  методы класса File позволяют читать/изменять (get/set) атрибуты файлов.
nio:
  методы класса Files позволяют читать/изменять (get/set) атрибуты файлов.
  Интерфейс BasicFileAttributes
  Files.readAttributes()
  Files.getFileAttributeView()
  Files.getAttribute()
  Files.setAttribute()


21. Как создать файл? 

Потоки записи создают файл автоматически.
Files.createFile()


22. Как создать директорию?

io:
  File.mkdir()
  File.mkdirs()
nio:
  Files.createDirectory()
  Files.createDirectories()


23. Как записать в файл?

PrintWriter(BufferedWriter(FileWriter()))
PrintWriter(BufferedOutputStream(FileOutputStream()))

Files.write()


24. Как прочитать данные из файла?

BufferedReader(FileReader())
BufferedInputStream(FileInputStream())
Scaner()
Files.lines()


https://docs.oracle.com/javase/tutorial/essential/io/index.html

===================================================================================================

Поиск файлов по критерию [#276472]
1. Создать программу для поиска файла. 
2. Программа должна искать данные в заданном каталоге и подкаталогах.
3. Имя файла может задаваться, целиком, по маске, по регулярному выражение(не обязательно).
4. Программа должна собираться в jar и запускаться через java -jar find.jar -d c:/ -n *.txt -m -o log.txt
Ключи 
-d - директория в которая начинать поиск.
-n - имя файл, маска, либо регулярное выражение.
-m - искать по макс, либо -f - полное совпадение имени. -r регулярное выражение.
-o - результат записать в файл.
5. Программа должна записывать результат в файл.
6. В программе должна быть валидация ключей и подсказка.

===================================================================================================

Урок 1. Потоки ввода вывода.

Герберт Шилдт. Java 8. Полное руководство. Глава 13, 20, 21.

Хорстман. Java. Библиотека профессионала. Том 2. Глава 1.


Урок 2.Sockets.

Герберт Шилдт. Java 8. Полное руководство. Глава 22.

Хорстман. Java. Библиотека профессионала. Том 2. Глава 3.1 – 3.3.