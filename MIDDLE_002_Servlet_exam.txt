1. Что такое сервлет?

  Специальный класс расширяющий класс HttpServlet.


2. Какова структура веб-проекта?

  Как правило используется MVC паттерн (model, view, controller)


3. Что такое контейнер сервлетов?

  движок servlet/jsp


4. Каковы задачи, функциональность контейнера сервлетов?

  принимает и перенаправляет запросы сервлетам, приобразует jsp в html, обеспечивает работу с SSL


5. Что вы знаете о сервлет фильтрах?

  Специальный класс имплементирующий класс Filter.
  Мапится в web.xml и вызывается каждый раз когда запрос равен маске указанной в <url-pattern>.


6. Зачем нужны слушатели в сервлетах?

  слушатели срабатывают при определенных событиях, происходящих в приложении
  для разных событий есть ряд своих интерфейсов


7. Когда вы будете использовать фильтры, а когда слушатели?

  фильтры - когда нужно при работе с запросом и ответом при определнных условиях выполнять дополнительную логику/функционал (Аутентификация)
  слушатели - когда нужно выполнить дополнительные задачи при определенных событиях в ходе работы приложения (Инициализация глобавльных данных приложения)


8. Как обработать исключения, выброшенные другим сервлетом в приложении?

  использовать тег <error-page> в web.xml для того чтобы перехватывать исключения и выводить user friendly сообщения об ошибках


9. Что такое дескриптор развертывания?

  это файл web.xml находящийся в папке WEB-INF


10. Как реализовать запуск сервлета с запуском приложения?

  забиндить его на index файл (или просто "/") или добавить слушателя ServletContextListener, getServletContext().getRequestDispatcher(...).forward(...)
  
  <servlet>
    <servlet-name>foo</servlet-name>
    <servlet-class>com.foo.servlets.Foo</servlet-class>
    
    <load-on-startup>5</load-on-startup>
    
  </servlet>


11. Что представляет собой объект ServletConfig?

  метод класса HttpServlet.getServletConfig() возвращает объект типа ServletConfig
  используется сервлет контейнером для передачи данных в сервлет во время инициализации


12. Что представляет собой объект ServletContext?

  метод класса HttpServlet.getServletContext() возвращает объект типа ServletContext
  используется сервлетом для общения с сервлет контейнером


13. В чем отличия ServletContext и ServletConfig?

  ServletContext - один экземпляр для всего приложения
  ServletConfig - отдельный экземпляр для каждого сервлета


14. Что такое Request Dispatcher?

  его можно получить из HttpRequest или ServletContext, служит для перенаправления HttpRequest и HttpResponse другому сервлету или jsp файлу


15. Как можно создать блокировку (deadlock) в сервлете?

  вызвать из doGet() метод doPost()
  и из метода doPost() метод doGet()


16. Как получить адрес сервлета на сервере?

  ServletContext.getRealPath(String path)


17. Как получить информацию о сервере из сервлета?

  ServletContext.getServerInfo()


18. Как получить ip адрес клиента на сервере?

  HttpRequest.getHeader("host")
  HttpRequest.getRemoteAddr()
  

19. Что вы знаете о классах обертках (wrapper) для сервлетов?

  позволяют добавить функционал к стандартному АПИ сервлетов реализуя шаблон декоратор


20. Каков жизненный цикл сервлета и когда какие методы вызываются?

  когда приложение запускается или когда сервлет вызывается впервые инициализируется объект сервлета который используется в дальнейшем во всех вызывающих потоках.


21. Какие методы необходимо определить при создании сервлетов?

  в основном это doGet() и doPost(), остальные методы переопределять не рекомендуется


22. В каком случае вы будете переопределять метод service()?

  этого делать не рекомендуется никогда


23. Есть ли смысл определить конструктор для сервлета, как лучше инициализировать данные?

так как не рекомендуется использовать внутренние поля при определении сервлета определять конструктор не имеет смысла
  для инициализации существует механизм инициализирующих параметров в web.xml
  инициализация вычисляемых параметров производится при помощи ServletContextListener
  инициализация производится методом init() после того как конструктор отработал


24. В чем отличия GenericServlet и HttpServlet?

  HttpServlet наследуется от GenericServlet и расширяет его функционалом специфичным для HTTP


25. Как вызвать из сервлета другой сервлет этого же и другого приложения?

  использовать методы RequestDispatcher.forward() и HttpServletResponse.sendRedirect()


26. Что вы знаете и в чем отличия методов forward() и sendRedirect()?

  RequestDispatcher.forward() - передает request/response
  HttpResponse.sendRedirect() - перенаправляет пользователя по ссылке (нет параметров)


27. Стоит ли волноваться о “многопоточной безопасности” работая с сервлетами?

  - при использовании общих ресурсов
  - при использовании полей в классах сервлетов


28. В чем отличие между веб сервером и сервером приложений?

  веб сервер - основная задача получение и ответ на HTTP запросы
  сервер приложений - основная задача обеспечение работы компонентов уровня приложения


29. Какой метод HTTP не является неизменяемым?

  неизменяемые методы - GET, HEAD, ... (используются для чтения)
  изменяемые - POST (используется для записи/изменения)


30. Почему HttpServlet класс объявлен как абстрактный?

  потому что для разных целей необходима своя логика обработки запросов, которые нужно переопределять в своих сервлетах


31. В чем разница между методами GET и POST?

  GET - следует использовать для получения информации, параметры в адресной строке
  POST - следует использовать для сохранения информации, параметры скрыты


32. Что такое MIME-тип?

  тип содержимого HTTP запроса или ответа


33. Назовите преимущества Servlet над CGI?

  Servlet - набор программ выполняющихся под управлением JVM и servlet contaner (платформанезависимость, безопастность)
  CGI - набор программ скомпилированных и установленных на сервере (скорость выполнения)


34. Каковы наиболее распространенные задачи выполняются в Servlet контейнере?

  маршрутизация запросов поступающих от веб сервера соответствующим сервлетам


35. В чем разница между PrintWriter и ServletOutputStream?

  PrintWriter - символьный поток для записи
  ServletOutputStream - байтовый поток для записи


36. Можем ли мы получить PrintWriter и ServletOutputStream одновременно в сервлете?

  response.getWriter()
  response.getOutputStream()
  
  нет, нужно использовать либо то, либо другое


37. Расскажите о интерфейсе SingleThreadModel.

  Deprecated интерфейс который гарантировал что один и тот же объект сервлета не будет использоваться параллельно в разных потоках,
  но он не гарантирует синхронизации при использовании общих ресурсов


38. Какие существуют атрибуты у сервлетов и какая сфера их применения?

  атрибуты запроса,
  атрибуты сессии,
  атрибуты контекста приложения


39. Почему необходимо переопределить только init() метод без аргументов?

  потому что init(ServletConfig) используется контейнером для инициализации сервлета и чтобы не допускать ошибок в инициализации предназначен метод init() без аргументов


40. Что означает URL encoding? Зачем нужны методы java.net.URLEncoder.encode() и decode()?

  процесс преобразования информации к форме CGI
  заменяет спец символы и пробелы


41. Зачем нужны и чем отличаются методы encodeUrl() и encodeRedirectUrl()?

  encodeUrl() - для преобразования ссылки для перехода
  encodeRedirectUrl() - для преобразования ссылки для перенаправления в response.sendRedirect();


42. Какие различные методы управления сессией в сервлетах вы знаете?

  устанавливать, получать и удалять аттрибуты сессии, получать информацию о времени работы сессии.


43. Что означает URL Rewriting?

  использование методов HttpResponse.encodeUrl() и HttpResponse.encodeRedirectUrl() для передачи jsessionid в случае если cookie в браузере клиента отключены


44. Как применяются Cookies в сервлетах?

  для хранения идентификатора сессии


45. Как уведомить объект в сессии, что сессия недействительна или закончилась?

  HttpSession.invalidate()
  использовать слушателя для сессии


46. Какой существует эффективный способ удостоверится, что все сервлеты доступны только для пользователя с валидной сессией?
  
  сделать фильтр в котором проверять сессию на валидность, если нет то выкидывать на нужную ссылку


47. Как мы можем обеспечить transport layer security для нашего веб приложения?

  TLS/SSL должны быть доступны на web server, а также дожнен быть установлен сертификат безопастности
  в ссылке использовать https вместо http


48. Как организовать подключение к базе дынных и обеспечить логирование log4j в сервлете?

  ServletContextListener - для инициализации пула соединений к базе данных
  логирование log4j - в каталоге WEB-INF добавляем файл конфигурации log4j.xml и в web.xml добавляем 
    <context-param>
    <param-name>log4j-config</param-name>
    <param-value>WEB-INF/log4j.xml</param-value>
    </context-param>


49. Какие важные особенности существуют в Servlet 3?

  упрощенная загрузка файлов из форм в native API (не обязательно использовать библиотеку Apache Commons) (@MultipartConfig, request.getPart(String))
  использование аннотаций для маппинга сервлетов к адресам
  динамическое добавление сервлетов, фильтров и слушателей
  асинхронная обработка запросов к сервлетам


50. Каковы различные способы аутентификации сервлета?

  Basic
  Digest
  Form-based


51. Написать сервлет, реализующий загрузку файла на сервер.

@MultipartConfig
public class PhotoUpload2 extends HttpServlet {

  @Override
  protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {  
        Part filePart = req.getPart("file");
        String fileName = filePart.getSubmittedFileName();
        //
        File folder = ImgStore.folder();
        File file = new File(folder + File.separator + fileName);
        try (FileOutputStream out = new FileOutputStream(file)) {
            out.write(filePart.getInputStream().readAllBytes());
        }
    }
}

public class PhotoDownload extends HttpServlet {

    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        String name = req.getParameter("name");
        resp.setContentType("name=" + name);
        resp.setContentType("image/png");
        resp.setHeader("Content-Disposition", "attachment; filename=\"" + name + "\"");
        File file = new File(ImgStore.folderName() + File.separator + name);
        try (FileInputStream in = new FileInputStream(file)) {
            resp.getOutputStream().write(in.readAllBytes());
        }
    }
}


https://www.journaldev.com/2015/servlet-interview-questions-and-answers


javascript - двойное тройное равенство
html - div, span
http - передача файла, как происходит
http - статусы выучить